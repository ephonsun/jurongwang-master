package com.orong.activity;

import java.util.ArrayList;

import org.json.JSONException;
import org.json.JSONObject;

import com.orong.Constant;
import com.orong.R;
import com.orong.adapter.UserNewsListAdapter;
import com.orong.entity.DetailMessage;
import com.orong.entity.HttpDatas;
import com.orong.entity.MessageSummary;
import com.orong.utils.JSONUtil;
import com.orong.utils.net.NetUtils;
import com.orong.utils.net.NetUtils.TaskCallBack;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListView;

/**
 * @Title: UserNewSListActivity.java
 * @Description: 提醒用户的一些信息列表
 * @author lanhaizhong
 * @date 2013年7月9日下午4:25:16
 * @version V1.0 Copyright (c) 2013 Company,Inc. All Rights Reserved.
 */
public class UserNewSListActivity extends BaseActivity implements OnItemClickListener {

	private ListView lvNewsList;
	private UserNewsListAdapter adapter;// 提醒信息列表适配
	private ArrayList<MessageSummary> newsList;
	private int pageSize = 15;
	private static int count = 0;// 信息列表的总数

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_user_news);
		lvNewsList = (ListView) this.findViewById(R.id.lv_usernews_list);
		Intent intent = getIntent();
		int newMessageCount = intent.getIntExtra("MessageCount", 0);
		// if (newMessageCount > 0) {
		loadnewsMessage(pageSize, 1);
		// }
		adapter = new UserNewsListAdapter(newsList, UserNewSListActivity.this);

		lvNewsList.setAdapter(adapter);
		lvNewsList.setOnItemClickListener(this);
		setTitle(UserNewSListActivity.this, "信息列表");
		initivReabck(this);
	}

	private void loadnewsMessage(int pageSize, int pageIndex) {
		HttpDatas datas = new HttpDatas(Constant.USERAPI);
		datas.putParam("method", "GetMessageList");
		datas.putParam("pageIndex", String.valueOf(pageIndex));
		datas.putParam("pageSize", String.valueOf(pageSize));
		NetUtils.sendRequest(datas, this, getString(R.string.loading), new TaskCallBack() {
			ArrayList<MessageSummary> list;

			@Override
			public int excueHttpResponse(String respondsStr) {
				int code = 0;
				try {
					JSONObject jsonObject = new JSONObject(respondsStr);
					code = jsonObject.getInt("code");
					if (code == Constant.RESPONSE_OK) {
						count = jsonObject.getInt("count");
						list = JSONUtil.jsonArray2ArrayList(jsonObject.getJSONArray("data"), MessageSummary.class);
						System.out.println(list.get(0).getRead_Flag());
					}
				} catch (JSONException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				return code;
			}

			@Override
			public void beforeTask() {

			}

			@Override
			public void afterTask(int result) {
				switch (result) {
				case Constant.RESPONSE_OK:
					System.out.println(list.size());
					if (newsList == null) {
						newsList = list;
					} else {
						newsList.addAll(list);
					}
					adapter.setNewsList(list);
					adapter.notifyDataSetChanged();
					break;

				default:
					showResulttoast(result, UserNewSListActivity.this);
					break;
				}
			}
		});
	}

	@Override
	public void onItemClick(AdapterView<?> arg0, View arg1, final int arg2, long arg3) {
		// TODO Auto-generated method stub
		if (arg0.equals(lvNewsList)) {
			final MessageSummary summary = (MessageSummary) adapter.getItem(arg2);
			String Message_ID = summary.getMessage_ID();
			// if()
			HttpDatas datas = new HttpDatas(Constant.USERAPI);
			datas.putParam("method", "GetMessage");
			datas.putParam("messageId", Message_ID);
			NetUtils.sendRequest(datas, UserNewSListActivity.this, getString(R.string.loading), new TaskCallBack() {
				int code = 0;
				DetailMessage message;

				@Override
				public int excueHttpResponse(String respondsStr) {
					try {
						JSONObject jsonObject = new JSONObject(respondsStr);
						code = jsonObject.getInt("code");
						if (code == Constant.RESPONSE_OK) {
							String count = jsonObject.getString("count");
							message = new DetailMessage(summary, count);
							// message = JSONUtil.jsonObject2Bean(jsonObject,
							// DetailMessage.class);
						}
					} catch (JSONException e) {
						e.printStackTrace();
					}
					return code;
				}

				@Override
				public void beforeTask() {

				}

				@Override
				public void afterTask(int result) {
					switch (result) {
					case Constant.RESPONSE_OK:
						adapter.setSummaryRead(arg2, true);
						Intent intent = new Intent(UserNewSListActivity.this, DetailsActivity.class);
						intent.putExtra("Message", message);
						startActivityForResult(intent, 1000);
						break;

					default:
						break;
					}
				}
			});

		}
	}

	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		// TODO Auto-generated method stub
		super.onActivityResult(requestCode, resultCode, data);
		if (requestCode == 1000) {
			adapter.notifyDataSetChanged();
		}
	}
}
