package com.orong.adapter;

import java.io.File;
import java.lang.ref.SoftReference;
import java.util.ArrayList;
import java.util.HashMap;

import com.orong.Constant;
import com.orong.R;
import com.orong.entity.LoanSummary;
import com.orong.utils.FileUitls;
import com.orong.utils.LoadImageRespone;
import com.orong.utils.net.NetUtils;
import com.orong.utils.net.NetUtils.DownloadCallback;

import android.content.Context;
import android.graphics.Bitmap;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.TextView;

/**
 * @Title: ProjectsAdapter.java
 * @Description: 展示可投资项目的列表
 * @author lanhaizhong
 * @date 2013年7月11日下午5:24:29
 * @version V1.0 Copyright (c) 2013 Company,Inc. All Rights Reserved.
 */
public class ProjectsAdapter extends BaseAdapter {
	private ArrayList<LoanSummary> projectList;
	public HashMap<String, SoftReference<Bitmap>> pictureMap;
	private Context context;
	private static File ImageDiRect;// 放置图片的目录

	public ProjectsAdapter(ArrayList<LoanSummary> projectList, Context context, HashMap<String, SoftReference<Bitmap>> pictureMap) {
		this.projectList = projectList;
		this.context = context;
		this.pictureMap = pictureMap;
	}

	@Override
	public int getCount() {
		return projectList == null ? 0 : projectList.size();
	}

	@Override
	public Object getItem(int position) {
		return projectList == null ? null : projectList.get(position);
	}

	@Override
	public long getItemId(int position) {
		return position;
	}

	@Override
	public View getView(int position, View view, ViewGroup parent) {
		ViewHolder holder;
		if (view == null) {
			view = LayoutInflater.from(context).inflate(R.layout.projects_item, null);
			holder = new ViewHolder();
			holder.iv_project_ic = (ImageView) view.findViewById(R.id.iv_project_ic);
			holder.tv_title = (TextView) view.findViewById(R.id.tv_project_theme);
			holder.tv_sum = (TextView) view.findViewById(R.id.tv_project_sum);
			holder.tv_progress = (TextView) view.findViewById(R.id.tv_project_progress);
			holder.tv_deadline = (TextView) view.findViewById(R.id.tv_deadline);
			holder.tv_rate = (TextView) view.findViewById(R.id.tv_rate);
			view.setTag(holder);
		} else {
			holder = (ViewHolder) view.getTag();
		}

		LoanSummary summary = projectList.get(position);
		getOrLoadImage(summary.getPicture(), holder.iv_project_ic);
		holder.tv_title.setText(summary.getTitle());
		holder.tv_sum.setText(String.valueOf(summary.getAmount()));
		holder.tv_progress.setText(String.valueOf(summary.getSpeedOfProgress()));
		holder.tv_deadline.setText(String.valueOf(summary.getLoanTerm()));
		holder.tv_rate.setText(String.valueOf(summary.getRate()));
		return view;
	}

	static class ViewHolder {
		ImageView iv_project_ic;
		TextView tv_title;// 项目名称
		TextView tv_sum;// 金额
		TextView tv_progress;// 进度
		TextView tv_deadline; // 期限
		TextView tv_rate;// 利率

	}

	public void setProjectList(ArrayList<LoanSummary> projectList) {
		this.projectList = projectList;
	}

	private void getOrLoadImage(String url, final ImageView chageview) {
		final String key = url.substring(url.lastIndexOf('/') + 1);
		SoftReference<Bitmap> softReference = pictureMap.get(key);
		if (softReference != null) {
			chageview.setImageBitmap(softReference.get());
			notifyDataSetChanged();
		} else {
			Bitmap bitmap = FileUitls.getBitmapfromSDPathByName(context, Constant.PROJECTIMG + "/" + key);
			softReference = new SoftReference<Bitmap>(bitmap);
			pictureMap.put(key, softReference);
			if (bitmap != null) {
				chageview.setImageBitmap(bitmap);
				notifyDataSetChanged();
			} else {
				NetUtils.downLoadImage(url, context, Constant.PROJECTIMG, new DownloadCallback() {

					@Override
					public void loadCompleteCallback(LoadImageRespone respone) {
						chageview.setImageBitmap(respone.getBitmap());
						SoftReference<Bitmap> softReference = new SoftReference<Bitmap>(respone.getBitmap());
						pictureMap.put(key, softReference);
						notifyDataSetChanged();
					}

					@Override
					public void beforeDownload() {
						// TODO Auto-generated method stub

					}
				});
			}
		}
	}
}
