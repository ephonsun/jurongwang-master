package com.orong.activity;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.telephony.TelephonyManager;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.CompoundButton.OnCheckedChangeListener;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.ViewFlipper;

import com.orong.R;
import com.orong.utils.MatchUtil;

/**
 * @Title: RegisterActivity.java
 * @Description: 注册页面
 * @author lanhaizhong
 * @date 2013年7月5日 上午10:15:31
 * @version V1.0 Copyright (c) 2013 Crong.com,Inc. All Rights Reserved.
 */
public class RegisterActivity extends BaseActivity implements OnClickListener {
	private LinearLayout llStepNavigate;// 页面第一第二步的导航条
	private TextView tvStep1;
	private TextView tvStep2;
	private ViewFlipper vfRegister;// 页面切换的容器
	private int viewIndex = 0;// 初始化当前页排位

	// step1界面元素
	private EditText etPhoneNum;// 电话号码输入框
	private Button btGetCode;// 获取验证码按钮;
	private EditText etCheckCode;// 验证码输入框
	private Button btNextStep;// 下一步按钮
	private CheckBox cbAccepted;// 同意复选框
	private TextView tvProtocolOfOrong;// 服务条款标题

	// step2的界面元素
	private EditText etUserName;// 电话或用户名
	private EditText etPassWord;// 登录密码
	private EditText etTransatonPassWord;// 交易密码
	private Button btRegissterLogin;// 注册并登录

	@Override
	protected void onCreate(Bundle arg0) {
		// TODO Auto-generated method stub
		super.onCreate(arg0);
		setContentView(R.layout.activity_register);
		intiView();

	}

	private void intiView() {
		llStepNavigate = (LinearLayout) this.findViewById(R.id.ll_step_navigate);
		tvStep1 = (TextView) this.findViewById(R.id.tv_step1);
		tvStep2 = (TextView) this.findViewById(R.id.tv_step2);

		iv_reback = (ImageView) this.findViewById(R.id.iv_reback);
		iv_reback.setOnClickListener(this);
		vfRegister = (ViewFlipper) this.findViewById(R.id.vfl_register);

		// step1
		etPhoneNum = (EditText) this.findViewById(R.id.et_phonenum);
		btGetCode = (Button) this.findViewById(R.id.bt_get_checkCode);
		btGetCode.setOnClickListener(this);

		etCheckCode = (EditText) this.findViewById(R.id.et_checkcode);

		// 同意并已经输入验证码才能实行下一步
		cbAccepted = (CheckBox) this.findViewById(R.id.cb_accepted);
		cbAccepted.setOnCheckedChangeListener(new OnCheckedChangeListener() {

			@Override
			public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
				// TODO Auto-generated method stub
				btNextStep.setClickable(isChecked && !"".equals(etCheckCode.getText().toString().trim()));

			}
		});

		tvProtocolOfOrong = (TextView) this.findViewById(R.id.tv_protocol_of_orong);
		tvProtocolOfOrong.setOnClickListener(this);

		btNextStep = (Button) this.findViewById(R.id.bt_next_step);
		btNextStep.setOnClickListener(this);

		// step2
		etUserName = (EditText) this.findViewById(R.id.et_usernmae);
		etPassWord = (EditText) this.findViewById(R.id.et_login_paw);

		etTransatonPassWord = (EditText) this.findViewById(R.id.et_transation_paw);
		etTransatonPassWord.setOnClickListener(this);

		btRegissterLogin = (Button) this.findViewById(R.id.bt_register_and_login);
		btRegissterLogin.setOnClickListener(this);

		// 试图 获取本机电话号码并显示到电话号输入框
		TelephonyManager manager = (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);
		etPhoneNum.setText(manager.getLine1Number());

	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.iv_reback:
			reback();
			break;
		case R.id.bt_get_checkCode:
			String phone = etPhoneNum.getText().toString();
			if (MatchUtil.isPhoneNum(phone)) {
				btNextStep.setClickable(true);
			} else {
				Toast.makeText(this, "输入的手机号码步正确", 0).show();
				btNextStep.setClickable(false);
				return;
			}
			break;
		case R.id.bt_next_step:
			doCheckCode();
			break;
		case R.id.tv_protocol_of_orong:
			startActivity(new Intent(this, ProtocolActivity.class));
			break;
		case R.id.bt_register_and_login:
			doRegisterAndLogin();
			break;
		default:
			break;
		}
	}

	/**
	 * 点击下一步对验证码验证
	 */
	private void doCheckCode() {
		llStepNavigate.setBackgroundResource(R.drawable.step2);
		tvStep1.setTextColor(getResources().getColor(R.color.white2));
		tvStep2.setTextColor(getResources().getColor(R.color.white2));
		vfRegister.showNext();
		viewIndex++;
	}

	/**
	 * 注册并登录
	 */
	private void doRegisterAndLogin() {
		// 验证用户名
		String username = etUserName.getText().toString();
		if (!MatchUtil.isLicitAccount(username)) {
			Toast.makeText(this, "帐号非法", 0).show();
			return;
		}
		// 验证密码
		String loginPasWord = etPassWord.getText().toString();
		System.out.println(loginPasWord);
		if (!MatchUtil.isLicitPassword(loginPasWord)) {
			Toast.makeText(this, " 密码非法", 0).show();
			return;
		}

		// 验证交易密码
		String transationPassWord = etTransatonPassWord.getText().toString();
		if (loginPasWord.equals(transationPassWord)) {
			Toast.makeText(this, "密码相同", 0).show();
			return;
		}
		if (!MatchUtil.isLicitPassword(transationPassWord)) {
			Toast.makeText(this, "交易密码步合法", 0).show();
			return;
		}
	}

	/**
	 * 返回前一页 如果ViewFlipper 的当前页不是第一页退回前一页，否则退出整个页面，
	 */
	private void reback() {
		if (viewIndex > 0) {
			llStepNavigate.setBackgroundResource(R.drawable.step1);
			tvStep1.setTextColor(getResources().getColor(R.color.white2));
			tvStep2.setTextColor(getResources().getColor(R.color.textcolor));
			vfRegister.showPrevious();
			viewIndex--;
		} else {
			finish();
		}

	}

	@Override
	public void onBackPressed() {
		// TODO Auto-generated method stub
		reback();

	}

}
